[project]
name = "t8-client"
version = "0.1.0"
description = "T8 API Client"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.13"
dependencies = [
    "click>=8.1.8",
    "matplotlib>=3.10.1",
    "numpy>=2.2.3",
    "pydantic>=2.11.2",
    "pyqt5>=5.15.11",
    "requests>=2.32.3",
    "tabulate>=0.9.0",
]

[project.scripts]
t8-cli = "tools.t8_cli:cli"

[dependency-groups]
dev = ["pytest>=8.3.5", "ruff>=0.10.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear - common bugs and anti-patterns
    "C90", # McCabe complexity
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "NPY", # flake8-numpy
    "PL",  # pylint
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # ruff-specific, import optimization and other inefficiencies
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "ANN", # flake8-annotations - Consistent type annotations
    "EM",  # flake8-errmsg
    "ERA", # flake8-eradicate - remove commented out code
    "PT",  # flake8-pytest-style
    "S",   # flake8-bandit - security checks
    "SLF", # flake8-self - private member access
    # "D",   # pydocstyle
]
